services:
  peerprep_mongo:
    image: mongo:8.0.14-noble
    restart: unless-stopped
    container_name: "peerprep_mongo"
    ports:
      - "127.0.0.1:27017:27017" # bind to localhost of the host only - prevents external access
    volumes:
      - mongo_data:/data/db # Use a named volume called "mongo_data", and mount it to /data/db for reading by MongoDB

  peerprep_redis:
    image: redis:7.4-alpine
    restart: unless-stopped
    container_name: "peerprep_redis"
    ports:
      - "127.0.0.1:6379:6379" # bind to localhost of the host only - prevents external access
    volumes:
      - redis_data:/data # Use a named volume for Redis data persistence
    command: >
      redis-server 
      --appendonly yes 
      --notify-keyspace-events KEA
      --maxmemory 4gb
      --maxmemory-policy allkeys-lfu
  
  peerprep_coderunner:
    image: peerprep-runner-service:latest
    build:
      context: ./backend/code_execution
      dockerfile: Dockerfile
      
    container_name: "peerprep_coderunner"
    restart: unless-stopped
    ports:
      - "4005:4005"
    environment:
      - CODEEXECUTIONPORT=4005
      - NODE_ENV=development
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - js_sandbox
      - py_sandbox
  
  js_sandbox:
    image: peerprep/js-sandbox:latest
    build:
      context: ./backend/code_execution/runner_images
      dockerfile: Dockerfile.javascript
    # command doesnt do anything main thing is to build the image
    command: ["true"] 

  py_sandbox:
    image: peerprep/py-sandbox:latest
    build:
      context: ./backend/code_execution/runner_images
      dockerfile: Dockerfile.python
    command: ["true"]

volumes:
  mongo_data:
  redis_data: